# Generated by Django 5.2 on 2025-04-27 22:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_basvurular_basvuru_pdf'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GuzelSanatlarFaaliyeti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faaliyet_turu', models.TextField()),
                ('detaylar', models.TextField(blank=True, null=True)),
                ('dokuman', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'guzel_sanatlar_faaliyetleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kitap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kitap_turu', models.TextField()),
                ('kitap_detaylari', models.TextField(blank=True, null=True)),
                ('kapak_ve_icindekiler_pdf', models.TextField(blank=True, null=True)),
                ('yayin_taninirlik_pdf', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kitaplar',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='arastirma_projesi',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='atif',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='bilimsel_toplanti',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='editorluk',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='egitim_faaliyet',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='guzel_sanat',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='idari_gorev',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='ilan',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='kisisel_bilgi',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='kitap',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='kullanici',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='makale',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='odul',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='patent',
        ),
        migrations.RemoveField(
            model_name='basvurular',
            name='tez_yoneticilik',
        ),
        migrations.AlterField(
            model_name='kullanici',
            name='rol',
            field=models.CharField(choices=[('YONETICI', 'Yönetici'), ('ADAY', 'Aday'), ('JURI', 'Jüri'), ('ADMIN', 'Admin')], max_length=20),
        ),
        migrations.CreateModel(
            name='Basvuru',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('faaliyet_donemi', models.TextField(blank=True, null=True)),
                ('basvurulan_kadro', models.TextField()),
                ('basvuru_aciklam', models.TextField(blank=True, null=True)),
                ('basvuru_tarihi', models.DateField()),
                ('basvuru_pdf', models.BinaryField(blank=True, null=True, verbose_name='Başvuru Onay PDF’i')),
                ('arastirma_projesi', models.ForeignKey(blank=True, db_column='arastirma_projeleri_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_arastirma', to='core.basvuru')),
                ('atif', models.ForeignKey(blank=True, db_column='atiflar_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_atif', to='core.basvuru')),
                ('bilimsel_toplanti', models.ForeignKey(blank=True, db_column='bilimsel_toplanti_faaliyetleri_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_toplanti', to='core.basvuru')),
                ('editorluk', models.ForeignKey(blank=True, db_column='editorluk_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_editorluk', to='core.basvuru')),
                ('egitim_faaliyet', models.ForeignKey(blank=True, db_column='egitim_faaliyetleri_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_egitim', to='core.basvuru')),
                ('guzel_sanat', models.ForeignKey(blank=True, db_column='guzel_sanatlar_faaliyetleri_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_guzel_sanat', to='core.basvuru')),
                ('idari_gorev', models.ForeignKey(blank=True, db_column='idari_gorevler_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_idari', to='core.basvuru')),
                ('ilan', models.ForeignKey(db_column='ilan_id', on_delete=django.db.models.deletion.CASCADE, to='core.ilan')),
                ('kisisel_bilgi', models.ForeignKey(db_column='kisisel_bilgi_id', on_delete=django.db.models.deletion.CASCADE, to='core.kisiselbilgiler')),
                ('kitap', models.ForeignKey(blank=True, db_column='kitaplar_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_kitap', to='core.basvuru')),
                ('kullanici', models.ForeignKey(db_column='kullanici_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('makale', models.ForeignKey(blank=True, db_column='makaleler_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_makale', to='core.basvuru')),
                ('odul', models.ForeignKey(blank=True, db_column='oduller_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_odul', to='core.basvuru')),
                ('patent', models.ForeignKey(blank=True, db_column='patentler_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_patent', to='core.basvuru')),
                ('tez_yoneticilik', models.ForeignKey(blank=True, db_column='tez_yoneticilikleri_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basvuru_tez_yoneticilikleri', to='core.basvuru')),
            ],
            options={
                'db_table': 'basvurular',
            },
        ),
        migrations.CreateModel(
            name='Atif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atif_turu', models.CharField(choices=[('D1', '1) SCI-E, SSCI ve AHCI tarafından taranan dergilerde; Uluslararası yayınevleri tarafından yayımlanmış … her eseri için'), ('D2', '2) E-SCI tarafından taranan dergilerde ve adayın yazar olarak yer almadığı yayınlardan her birinde…'), ('D3', '3) SCI-E, SSCI, AHCI, E-SCI dışındaki uluslararası indeksli dergilerde; Uluslararası yayınevlerinde bölümler için'), ('D4', '4) Ulusal hakemli dergilerde; Ulusal yayınevlerinde yayımlanmış kitaplarda…'), ('D5', '5) Güzel sanat eserlerinin uluslararası kaynaklarda yayımlanması veya gösterilmesi'), ('D6', '6) Güzel sanat eserlerinin ulusal kaynaklarda yayımlanması veya gösterilmesi')], db_column='atif_turu', max_length=3)),
                ('eserin_adi_ve_atis_sayisi', models.TextField(db_column='eserin_adi_ve_atis_sayisi')),
                ('pdf_yolu', models.FileField(db_column='pdf_yolu', upload_to='atif_belgeleri/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atiflar', to='core.basvuru')),
            ],
            options={
                'db_table': 'atiflar',
            },
        ),
        migrations.CreateModel(
            name='ArastirmaProjesi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proje_turu_enum', models.CharField(choices=[('H1', 'AB çerçeve programı/NSF/ERC bilimsel araştırma projesinde koordinatör/alt koordinatör olmak'), ('H2', 'AB çerçeve programı/NSF/ERC bilimsel araştırma projesinde yürütücü olmak'), ('H3', 'AB çerçeve programı/NSF/ERC bilimsel araştırma projesinde araştırmacı olmak'), ('H4', 'AB çerçeve dışı uluslararası projelerde koordinatör/alt koordinatör olmak'), ('H5', 'AB çerçeve dışı uluslararası projelerde yürütücü olmak'), ('H6', 'AB çerçeve dışı uluslararası projelerde araştırmacı olmak'), ('H7', 'AB çerçeve dışı uluslararası projelerde danışman olmak'), ('H8', 'TÜBİTAK ARGE/TÜSEB projelerinde yürütücü olmak'), ('H9', 'Diğer TÜBİTAK projelerinde yürütücü olmak'), ('H10', 'TÜBİTAK dışındaki kamu kurumlarında yürütücü olmak'), ('H11', 'Sanayi kuruluşları ile yapılan Ar-Ge projelerinde yürütücü olmak'), ('H12', 'Diğer özel kuruluşlar ile yapılan Ar-Ge projelerinde yürütücü olmak'), ('H13', 'TÜBİTAK ARGE (ARDEB, TEYDEB) ve TÜSEB projelerinde araştırmacı olmak'), ('H14', 'Diğer TÜBİTAK projelerinde araştırmacı olmak'), ('H15', 'TÜBİTAK dışı kamu kurumları projelerinde araştırmacı olmak'), ('H16', 'Sanayi kuruluşları ile yapılan projelerde araştırmacı olmak'), ('H17', 'Diğer özel kuruluşlarla yapılan projelerde araştırmacı olmak'), ('H18', 'TÜBİTAK ARGE ve TÜSEB projelerinde danışman olmak'), ('H19', 'Diğer TÜBİTAK projelerinde danışman olmak'), ('H20', 'TÜBİTAK dışı kamu kurumları projelerinde danışman olmak'), ('H21', 'Sanayi kuruluşlarıyla yapılan projelerde danışman olmak'), ('H22', 'Özel kuruluşlarla yapılan projelerde danışman olmak'), ('H23', 'BAP projelerinde yürütücü olmak'), ('H24', 'BAP projelerinde araştırmacı olmak'), ('H25', 'BAP projelerinde danışman olmak'), ('H26', 'En az dört aylık yurtdışı araştırma çalışmasında bulunmak'), ('H27', 'En az dört aylık yurtiçi araştırma çalışmasında bulunmak'), ('H28', 'TÜBİTAK 2209-A, 2209-B, 2242 projelerinde danışman olmak')], db_column='proje_turu_enum', max_length=3)),
                ('proje_detaylari', models.TextField(db_column='proje_detaylari')),
                ('proje_belgesi', models.FileField(db_column='proje_belgesi', upload_to='proje_belgeleri/')),
                ('gorev_belgesi', models.FileField(db_column='gorev_belgesi', upload_to='gorev_belgeleri/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arastirma_projeleri', to='core.basvuru')),
            ],
            options={
                'db_table': 'arastirma_projeleri',
            },
        ),
        migrations.CreateModel(
            name='BilimselToplantiFaaliyeti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bilimsel_toplanti_turu_enum', models.CharField(choices=[('B1', 'Uluslararası bilimsel toplantılarda sözlü olarak sunulan, tam metni matbu veya elektronik olarak bildiri kitapçığında yayımlanmış çalışmalar'), ('B2', 'Uluslararası bilimsel toplantılarda sözlü olarak sunulan, özet metni matbu veya elektronik olarak bildiri kitapçığında yayımlanmış çalışmalar'), ('B3', 'Uluslararası bilimsel toplantılarda poster olarak sunulan çalışmalar'), ('B4', 'Ulusal bilimsel toplantılarda sözlü olarak sunulan tam metni matbu veya elektronik olarak bildiri kitapçığında yayımlanmış çalışmalar'), ('B5', 'Ulusal bilimsel toplantılarda sözlü olarak sunulan, özet metni matbu veya elektronik olarak bildiri kitapçığında yayımlanmış çalışmalar'), ('B6', 'Ulusal bilimsel toplantılarda poster olarak sunulan çalışmalar'), ('B7', 'Uluslararası bir kongre, konferans veya sempozyumda organizasyon veya yürütme komitesinde düzenleme kurulu üyeliği veya bilim kurulu üyeliği yapmak'), ('B8', 'Ulusal bir kongre, konferans veya sempozyumda organizasyon veya yürütme komitesinde düzenleme kurulu üyeliği veya bilim kurulu üyeliği yapmak'), ('B9', 'Uluslararası konferanslarda, bilimsel toplantı, seminerlerde davetli konuşmacı olarak yer almak'), ('B10', 'Ulusal konferanslarda, bilimsel toplantı, seminerlerde davetli konuşmacı olarak yer almak'), ('B11', 'Uluslararası veya ulusal çeşitli kurumlarla işbirliği içinde atölye, çalıştay, yaz okulu organize ederek gerçekleştirmek'), ('B12', 'Uluslararası veya ulusal çeşitli kurumlarla işbirliği içinde atölye, çalıştay, panel, seminer, yaz okulunda konuşmacı veya panelist olarak görev almak')], db_column='bilimsel_toplanti_turu_enum', max_length=4)),
                ('detaylar', models.TextField(db_column='detaylar')),
                ('belge_yolu', models.FileField(blank=True, db_column='belge_yolu', null=True, upload_to='toplanti_belgeleri/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toplanti_faaliyetleri', to='core.basvuru')),
            ],
            options={
                'db_table': 'bilimsel_toplanti_faaliyetleri',
            },
        ),
        migrations.CreateModel(
            name='EgitimFaaliyeti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ders_turu', models.CharField(choices=[('E1', '1) Ön lisans / lisans dersleri'), ('E2', '2) Ön lisans / lisans dersleri (Yabancı dilde)'), ('E3', '3) Lisansüstü dersleri'), ('E4', '4) Lisansüstü dersleri (Yabancı dilde)')], db_column='ders_turu', max_length=2)),
                ('ders_detaylari', models.TextField(db_column='ders_detaylari')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='egitim_faaliyetleri', to='core.basvuru')),
            ],
            options={
                'db_table': 'egitim_faaliyetleri',
            },
        ),
        migrations.CreateModel(
            name='IdariGorev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gorev_turu_enum', models.CharField(choices=[('K1', 'Dekan/Enstitü/Yüksekokul/MYO/Merkez Müdürü'), ('K2', 'Enstitü Müdür Yrd. / Dekan Yrd. / ...'), ('K3', 'Bölüm Başkan Yrd. / Anabilim Dalı Başkanı'), ('K4', 'Rektörlükçe görevlendirilen Koordinatörlük'), ('K5', 'Rektörlükçe görevlendirilen Koordinatör Yardımcıları'), ('K6', 'Rektörlükçe görevlendirilen üniversite düzeyinde Komisyon/Kurul üyelikleri'), ('K7', 'Dekanlık/Y.O. Müdürlüğü/... görevlendirilen Komisyon/Kurul üyelikleri'), ('K8', 'Bölüm Başkanlıkları tarafından görevlendirilen Komisyon/Kurul üyelikleri'), ('K9', 'Rektörlük/Dekanlık/... eğitim, işbirliği vb. konularda katkı sağlamak'), ('K10', 'Uluslararası nitelikteki bilimsel ve mesleki kurum/kuruluşlarda görev almak'), ('K11', 'Ulusal nitelikteki bilimsel ve mesleki kurum/kuruluşlarda görev almak'), ('K12', 'Yerel nitelikteki bilimsel ve mesleki kurum/kuruluşlarda görev almak')], db_column='gorev_turu_enum', max_length=3)),
                ('gorev_birimi_yili', models.TextField(db_column='gorev_birimi_yili')),
                ('belge_yukle', models.FileField(db_column='belge_yukle', upload_to='idari_gorevler/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idari_gorevler', to='core.basvuru')),
            ],
            options={
                'db_table': 'idari_gorevler',
            },
        ),
        migrations.CreateModel(
            name='Makale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('makale_turu_enum', models.CharField(choices=[('Q1', '1) SCI-E, SSCI veya AHCI kapsamındaki dergilerde yayımlanmış makale (Q1)'), ('Q2', '2) … yayımlanmış makale (Q2)'), ('Q3', '3) … yayımlanmış makale (Q3)'), ('Q4', '4) … yayımlanmış makale (Q4)'), ('ESCI', '5) ESCI taranan dergilerde yayımlanmış makale'), ('ULAKBIM_TR', '6) ULAKBİM TR Dizin taranmış dergilerde yayımlanmış makale'), ('ULUSAL', '7) Ulusal hakemli dergilerde yayımlanmış makale'), ('ULAKBIM_TR_ULUSAL', '8) ULAKBİM TR Dizin tarafından taranan ulusal hakemli dergilerde yayımlanmış makale'), ('ULUSAL_8_DISI', '9) 8. madde dışındaki ulusal hakemli dergilerde yayımlanmış makale')], db_column='makale_turu', max_length=30)),
                ('yazarlar_dergi_bilgi', models.TextField(db_column='yazarlar_dergi_bilgi')),
                ('pdf_yolu', models.FileField(db_column='pdf_yolu', upload_to='makaleler/')),
                ('basvuru', models.ForeignKey(db_column='makaleler_id', on_delete=django.db.models.deletion.CASCADE, related_name='makaleler', to='core.basvuru')),
            ],
            options={
                'db_table': 'makaleler',
            },
        ),
        migrations.CreateModel(
            name='Odul',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('odul_turu_enum', models.CharField(choices=[('D1', 'Sürekli ve periyodik uluslararası bilim & sanat ödülleri'), ('D2', 'TÜBİTAK Bilim, Özel ve Hizmet Ödülleri'), ('D3', 'TÜBA Akademi Ödülleri'), ('D4', 'TÜBİTAK Teşvik Ödülü'), ('D5', 'TÜBA GEBİP & TESEP ödülleri'), ('D6', 'Sürekli ve periyodik ulusal bilim & sanat ödülleri'), ('D7', 'Jürisiz ulusal/uluslararası ödüller'), ('D8', 'Uluslararası hakemli yarışmalarda birincilik'), ('D9', '… ikincilik'), ('D10', '… üçüncülük'), ('D11', 'Ulusal hakemli yarışmalarda birincilik'), ('D12', '… ikincilik'), ('D13', '… üçüncülük')], db_column='odul_turu_enum', max_length=3)),
                ('aciklama', models.TextField(db_column='aciklama')),
                ('belge_pdf', models.FileField(db_column='belge_pdf', upload_to='oduller/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oduller', to='core.basvuru')),
            ],
            options={
                'db_table': 'oduller',
            },
        ),
        migrations.CreateModel(
            name='Patent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patent_turu_enum', models.CharField(choices=[('G1', 'Lisanslanan Uluslararası Patent'), ('G2', 'Tescillenmiş Uluslararası Patent'), ('G3', 'Uluslararası Patent Başvurusu'), ('G4', 'Lisanslanan Ulusal Patent'), ('G5', 'Tescillenmiş Ulusal Patent'), ('G6', 'Ulusal Patent Başvurusu'), ('G7', 'Lisanslanan Faydalı Model, Endüstriyel Tasarım, Marka'), ('G8', 'Faydalı Model ve Endüstriyel Tasarım')], db_column='patent_turu_enum', max_length=2)),
                ('patent_detaylari', models.TextField(db_column='patent_detaylari')),
                ('patent_belgesi_pdf', models.FileField(db_column='patent_belgesi_pdf', upload_to='patentler/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patentler', to='core.basvuru')),
            ],
            options={
                'db_table': 'patentler',
            },
        ),
        migrations.CreateModel(
            name='TezYonetciligi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tez_turu_enum', models.CharField(choices=[('F1', 'Doktora/Sanatta Yeterlik veya Tıp/Diş Hekimliğinde Uzmanlık tez yönetimi'), ('F2', 'Yüksek Lisans Tez Yönetimi'), ('F3', 'Doktora/Sanatta Yeterlik (Eş Danışman)'), ('F4', 'Yüksek Lisans/Sanatta Yeterlik Tez Yönetimi (Eş Danışman)')], db_column='tez_turu_enum', max_length=2)),
                ('tez_detaylari', models.TextField(db_column='tez_detaylari')),
                ('tez_belgesi_pdf', models.FileField(db_column='tez_belgesi_pdf', upload_to='tez_yonetcilikleri/')),
                ('basvuru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tez_yonetcilikleri', to='core.basvuru')),
            ],
            options={
                'db_table': 'tez_yonetcilikleri',
            },
        ),
        migrations.DeleteModel(
            name='GuzelSanatlarFaaliyetleri',
        ),
        migrations.DeleteModel(
            name='Kitaplar',
        ),
        migrations.DeleteModel(
            name='Basvurular',
        ),
    ]
